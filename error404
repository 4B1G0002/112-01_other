//112-01 微處理機應用實習 期末專案 4B1G0002 馮士釗
//A1121206_109_DHT11_water_sw420_RYGLED_LCD_wifi_thingspeak
//1121207 基本功能全部完成，網頁可以顯示 溫度、濕度、水位、震動
//108增加網頁顯示水位高、中、普通
//109增加網頁時間顯示
//112-01 微處理機應用實習 期末專案 4B1G0002 馮士釗
//A1121206_109_DHT11_water_sw420_RYGLED_LCD_wifi_thingspeak
#include <LiquidCrystal_I2C.h>  //I2C LCD
#include "DHTesp.h"
#include "ThingSpeak.h"
//--------------------------------------------------------------------------------
#include <WebServer.h>
#include <WiFiClient.h>
#include <WiFi.h>
const char* ssid = "DDAP";           // Change this to your WiFi SSID
const char* password = "2023esp32";  // Change this to your WiFi password
WebServer server(80);
//--------------------------------------------------------------------------------
LiquidCrystal_I2C lcd1(0x27, 16, 2);  //I2C LCD
//--------------------------------------------------------------------------------
const int DHT_PIN = 13;
DHTesp dhtSensor;
//--------------------------------------------------------------------------------
int water_sensor = 36;  // 水位感測器Ｓ信號腳 連接到ESP32的 GPIO36
//1700滿水位，1500 3/4，1400 1/2
//--------------------------------------------------------------------------------
int buzzPin = 14;  //設定蜂鳴器
//--------------------------------------------------------------------------------
int rled = 0;    // R 紅色LED控制腳 連接到ESP32的 GPIO15
int yled = 4;    // Y 黃色LED控制腳 連接到ESP32的 GPIO16
int gled = 16;   // G 綠色LED控制腳 連接到ESP32的 GPIO17
int rled2 = 5;   // R 紅色LED控制腳 連接到ESP32的 GPIO15
int yled2 = 18;  // Y 黃色LED控制腳 連接到ESP32的 GPIO16
int gled2 = 19;  // G 綠色LED控制腳 連接到ESP32的 GPIO17
//--------------------------------------------------------------------------------
int shockPin = 26;  //SW-420震動感測器DO信號腳 連接到ESP32 GPIO17
byte value;         //宣告value變數
//--------------------------------------------------------------------------------
#define SECRET_CH_ID 2360362                    // replace 0000000 with your channel number
#define SECRET_WRITE_APIKEY "I6AE6S3768AEBXV3"  // replace XYZ with your channel write API Key
unsigned long myChannelNumber = SECRET_CH_ID;
const char* myWriteAPIKey = SECRET_WRITE_APIKEY;
// Initialize our values
int number1 = 0;
int number2 = random(0, 100);
int number3 = random(0, 100);
int number4 = random(0, 100);
String myStatus = "";
WiFiClient client;
//--------------------------------------------------------------------------------


void setup() {
  digitalWrite(buzzPin, HIGH);
  Serial.begin(115200);
  //LCD
  lcd1.init();
  lcd1.backlight();
  lcd1.setCursor(0, 0);
  lcd1.print("A1121206_109a_OK");
  lcd1.setCursor(0, 1);
  lcd1.print("2023/12/06 Ready");
  //--------------------------------------------------------------------------------
  //DHT11
  dhtSensor.setup(DHT_PIN, DHTesp::DHT11);
  //--------------------------------------------------------------------------------
  pinMode(water_sensor, INPUT);  //設置water_sensor對應的腳GPIO36為輸入
  //--------------------------------------------------------------------------------
  pinMode(buzzPin, OUTPUT);  //設定蜂鳴器
  //--------------------------------------------------------------------------------
  pinMode(rled, OUTPUT);   //設置redled對應的腳GPIO15為輸出
  pinMode(yled, OUTPUT);   //設置yellowled對應的腳GPIO16為輸出
  pinMode(gled, OUTPUT);   //設置greenled對應的腳GPIO17為輸出
  pinMode(rled2, OUTPUT);  //設置redled對應的腳GPIO15為輸出
  pinMode(yled2, OUTPUT);  //設置yellowled對應的腳GPIO16為輸出
  pinMode(gled2, OUTPUT);  //設置greenled對應的腳GPIO17為輸出
  //--------------------------------------------------------------------------------
  pinMode(shockPin, INPUT);  //設定shockPin的接腳為輸入模式
  //--------------------------------------------------------------------------------
  //--------------------------------------------------------------------------------

  //WIFI
  while (!Serial) { delay(100); }
  // We start by connecting to a WiFi network
  Serial.println();
  Serial.println("******************************************************");
  Serial.print("Connecting to ");
  Serial.println(ssid);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
    server.on("/", handleRoot);  //網頁建立，首頁
    server.begin();
  }
  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
  server.on("/getdata", HTTP_GET, handleGetData);
  //--------------------------------------------------------------------------------
  ThingSpeak.begin(client);  // Initialize ThingSpeak
}

int val;  // 全域變數，用於存儲水位感測器的數值
//byte value; // 全域變數，用於存儲震動感測器的數值

void loop() {
  TempAndHumidity data = dhtSensor.getTempAndHumidity();
  int val = analogRead(water_sensor);  //從水位感測器讀出類比數值
  value = digitalRead(shockPin);
  server.handleClient();
  water();     //水位感測器
  shock();     //SW-420震動
  lcd();       //DHT11
  serial01();  //DHT11+水位感測器
  ThingS();    //ThingSpeak
  delay(250);
}
//--------------------------------------------------------------------------------
void handleRoot() {
  String response = "<html>  <head>    <meta charset=\"utf-8\"> <title>My ESP32</title> <script>\n";
  response += "setInterval(function() {";
  response += "  var xhttp = new XMLHttpRequest();";
  response += "  xhttp.onreadystatechange = function() {";
  response += "    if (this.readyState == 4 && this.status == 200) {";
  response += "      var data = JSON.parse(this.responseText);";
  response += "      var waterLevelElement = document.getElementById('waterLevel');";  // 宣告 waterLevelElement
  //
  response += "      var currentDate = new Date();";
  response += "      var formattedDate = currentDate.getFullYear() + '/' + "
              "((currentDate.getMonth() + 1) < 10 ? '0' : '') + (currentDate.getMonth() + 1) + '/' + "
              "(currentDate.getDate() < 10 ? '0' : '') + currentDate.getDate();";
  response += "      var formattedTime = "
              "`${(currentDate.getHours() < 10 ? '0' : '') + currentDate.getHours()}:` + "
              "`${(currentDate.getMinutes() < 10 ? '0' : '') + currentDate.getMinutes()}:` + "
              "`${(currentDate.getSeconds() < 10 ? '0' : '') + currentDate.getSeconds()}`;";

  response += "      document.getElementById('currentDateTime').innerHTML = '現在時間: ' + formattedDate + ' ' + formattedTime;";
  //
  response += "      document.getElementById('temperature').innerHTML = '溫度: ' + data.temperature + '°C';";
  response += "      document.getElementById('humidity').innerHTML = '濕度: ' + data.humidity + '%';";
  //response += "      document.getElementById('waterLevel').innerHTML = '水位: ' + data.waterLevel;";
  response += "      if (data.waterLevel > 900) {";
  response += "        waterLevelElement.innerHTML = '水位: 高 ' + data.waterLevel;";
  response += "      } else if (data.waterLevel > 500) {";
  response += "        waterLevelElement.innerHTML = '水位: 中 ' + data.waterLevel;";
  response += "      } else {";
  response += "        waterLevelElement.innerHTML = '水位: 普通 ' + data.waterLevel;";
  response += "      }";
  response += "      document.getElementById('vibration').innerHTML = '震動: ' + data.vibration;";
  //response += " ";
  response += "    }";
  response += "  };";
  response += "  xhttp.open('GET', '/getdata', true);";
  response += "  xhttp.send();";
  response += "}, 500);";  // 每x秒更新一次
  response += "</script></head>  <body> <h4>馮士釗 4B1G0002</h4> <h4>112-01 微處理機應用實務 期末專題</h4> <br> <p id='currentDateTime'></p> <p id='temperature'>溫度: </p> <p id='humidity'>濕度: </p> <p id='waterLevel'>水位: </p> <p id='vibration'>震動: </p> </body></html>";
  server.send(200, "text/html", response);
}
//--------------------------------------------------------------------------------
void handleGetData() {
  TempAndHumidity data = dhtSensor.getTempAndHumidity();
  int val = analogRead(water_sensor);  //從水位感測器讀出類比數值
  value = digitalRead(shockPin);
  String jsonData = "{\"temperature\": " + String(data.temperature, 2) + ", \"humidity\": " + String(data.humidity, 1) + ", \"waterLevel\": " + String(val) + ", \"vibration\": " + String(value) + "}";
  server.send(200, "application/json", jsonData);
}
//--------------------------------------------------------------------------------
void water() {
  int val = analogRead(water_sensor);  //從水位感測器讀出類比數值
  if (val > 900) {
    digitalWrite(rled, HIGH);  //當水位值>2000：红色亮
    digitalWrite(yled, LOW);
    digitalWrite(gled, LOW);
    digitalWrite(buzzPin, LOW);  //有源蜂鳴器響起
    //Serial.println("水位高");
    delay(500);
    digitalWrite(rled, LOW);
    digitalWrite(buzzPin, HIGH);  //有源蜂鳴器關閉
    delay(500);
  } else if (val > 500) {
    digitalWrite(rled, LOW);
    digitalWrite(yled, HIGH);  //當水位值介於2500～800：黄色亮
    digitalWrite(gled, LOW);
    digitalWrite(buzzPin, LOW);  //有源蜂鳴器響起
    //Serial.println("水位中");
    delay(1000);
    digitalWrite(yled, LOW);
    digitalWrite(buzzPin, HIGH);  //有源蜂鳴器關閉
    delay(1000);
  } else {
    digitalWrite(rled, LOW);
    digitalWrite(yled, LOW);
    digitalWrite(gled, HIGH);  //當水位值小於800：綠色亮
  }
}
//--------------------------------------------------------------------------------
void shock() {
  if (value == 1) {
    digitalWrite(rled2, HIGH);
    digitalWrite(yled2, HIGH);
    digitalWrite(gled2, LOW);
    digitalWrite(buzzPin, LOW);  //有源蜂鳴器響起
    delay(1000);
    digitalWrite(rled2, LOW);
    digitalWrite(yled2, LOW);
    digitalWrite(gled2, LOW);
    digitalWrite(buzzPin, HIGH);  //有源蜂鳴器關閉
    delay(1000);
  } else {
    digitalWrite(rled2, LOW);
    digitalWrite(yled2, LOW);
    digitalWrite(gled2, HIGH);
  }
}
//--------------------------------------------------------------------------------
void lcd() {
  TempAndHumidity data = dhtSensor.getTempAndHumidity();
  lcd1.setCursor(0, 0);
  lcd1.print("Temp: " + String(data.temperature, 2) + "°C");
  lcd1.setCursor(0, 1);
  lcd1.print("Humidity: " + String(data.humidity, 1) + "%");
}
//--------------------------------------------------------------------------------
void serial01() {
  TempAndHumidity data = dhtSensor.getTempAndHumidity();
  int val = analogRead(water_sensor);  //從水位感測器讀出類比數值
  if (val > 900) {
    Serial.println("Temp: " + String(data.temperature, 2) + "°C");
    Serial.println("Humidity: " + String(data.humidity, 1) + "%");
    Serial.println("水位: 高 " + String(val));
    Serial.println("震動" + String(value));
    Serial.println("---");
  } else if (val > 500) {
    Serial.println("Temp: " + String(data.temperature, 2) + "°C");
    Serial.println("Humidity: " + String(data.humidity, 1) + "%");
    Serial.println("水位: 中 " + String(val));
    Serial.println("震動" + String(value));
    Serial.println("---");
  } else {
    Serial.println("Temp: " + String(data.temperature, 2) + "°C");
    Serial.println("Humidity: " + String(data.humidity, 1) + "%");
    Serial.println("水位: 正常 " + String(val));
    Serial.println("震動" + String(value));
    Serial.println("---");
  }
}
//--------------------------------------------------------------------------------
void ThingS() {
  TempAndHumidity data = dhtSensor.getTempAndHumidity();
  int val = analogRead(water_sensor);  //從水位感測器讀出類比數值
  value = digitalRead(shockPin);
  ThingSpeak.setField(1, String(data.temperature, 2));
  ThingSpeak.setField(2, String(data.humidity, 1));
  ThingSpeak.setField(3, String(val));
  ThingSpeak.setField(4, String(value));
  if (number1 > number2) {
    myStatus = String("field1 is greater than field2");
  } else if (number1 < number2) {
    myStatus = String("field1 is less than field2");
  } else {
    myStatus = String("field1 equals field2");
  }

  // set the status
  ThingSpeak.setStatus(myStatus);

  // write to the ThingSpeak channel
  int x = ThingSpeak.writeFields(myChannelNumber, myWriteAPIKey);
  if (x == 200) {
    Serial.println("Channel update successful.");
  } else {
    Serial.println("Problem updating channel. HTTP error code " + String(x));
  }

  // change the values
  number1++;
  if (number1 > 99) {
    number1 = 0;
  }
  number2 = random(0, 100);
  number3 = random(0, 100);
  number4 = random(0, 100);
}

